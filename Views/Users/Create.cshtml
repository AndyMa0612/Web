@model Badminton.Models.User
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>註冊</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #fff8dc;
            min-height: 100vh;
        }

        .home-icon {
            position: absolute;
            top: 20px;
            left: 20px;
        }

            .home-icon img {
                width: 32px;
                height: 32px;
            }

        .btn:disabled {
            background-color: #dcdcdc;
            color: #ffffff;
            cursor: not-allowed;
            border-color: #dcdcdc;
        }
    </style>
</head>
<body>
    <a href="@Url.Action("Index", "Users")" class="home-icon">
        <img src="~/image/house.png" alt="Home" />
    </a>

    <div class="container">
        <div class="row justify-content-center align-items-center min-vh-100">
            <div class="col-md-6 col-lg-5">
                <div class="card shadow">
                    <div class="card-body p-4">
                        <h2 class="text-center mb-4">註冊</h2>

                        @using (Html.BeginForm("Create", "Users", FormMethod.Post, new { @class = "needs-validation" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="mb-3">
                                <label for="Student" class="form-label">學號:</label>
                                @Html.EditorFor(model => model.Student, new { htmlAttributes = new { @class = "form-control", maxlength = "9", minlength = "9" } })
                                @Html.ValidationMessageFor(model => model.Student, "", new { @class = "text-danger" })
                                <span id="studentError" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label for="Password" class="form-label">密碼:</label>
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password", maxlength = "30", minlength = "6" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                <span id="passwordError" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label for="confirmPassword" class="form-label">確認密碼:</label>
                                <input id="confirmPassword" name="confirmPassword" type="password" class="form-control" maxlength="30" minlength="6" />
                                <span id="confirmPasswordError" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label for="Phone" class="form-label">手機:</label>
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", maxlength = "10", minlength = "10" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                <span id="phoneError" class="text-danger"></span>
                            </div>

                            <div class="d-grid gap-2">
                                <button type="submit" class="btn btn-warning" id="submitButton" disabled>註冊</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            let isStudentValid = false;
            let isPhoneValid = false;
            let isPasswordValid = false;
            let isPasswordMatch = false;

            function validateForm() {
                $('#submitButton').prop('disabled', !(isStudentValid && isPhoneValid && isPasswordValid && isPasswordMatch));
            }

            function validateStudent(student) {
                return /^\d{9}$/.test(student);
            }

            function validatePhone(phone) {
                return /^09\d{8}$/.test(phone);
            }

            function validatePassword(password) {
                return password.length >= 6 && password.length <= 30;
            }

            $('#Student').on('input', function() {
                const student = $(this).val();
                if (!validateStudent(student)) {
                    $('#studentError').text('學號必須是9位數字');
                    isStudentValid = false;
                } else {
                    $.ajax({
                        url: '@Url.Action("ValidateStudent", "Users")',
                        type: 'POST',
                        data: { student: student },
                        success: function(response) {
                            isStudentValid = response.isValid;
                            $('#studentError').text(response.isValid ? '' : '此學號已被註冊');
                            validateForm();
                        }
                    });
                }
                validateForm();
            });

            $('#Phone').on('input', function() {
                const phone = $(this).val();
                if (!validatePhone(phone)) {
                    $('#phoneError').text('手機號碼必須是09開頭的10位數字');
                    isPhoneValid = false;
                } else {
                    $.ajax({
                        url: '@Url.Action("ValidatePhone", "Users")',
                        type: 'POST',
                        data: { phone: phone },
                        success: function(response) {
                            isPhoneValid = response.isValid;
                            $('#phoneError').text(response.isValid ? '' : '此手機號碼已被註冊');
                            validateForm();
                        }
                    });
                }
                validateForm();
            });

            $('#Password').on('input', function() {
                const password = $(this).val();
                isPasswordValid = validatePassword(password);
                $('#passwordError').text(isPasswordValid ? '' : '密碼長度必須在6-30位之間');

                const confirmPassword = $('#confirmPassword').val();
                if (confirmPassword) {
                    isPasswordMatch = password === confirmPassword;
                    $('#confirmPasswordError').text(isPasswordMatch ? '' : '密碼與確認密碼不一致');
                }
                validateForm();
            });

            $('#confirmPassword').on('input', function() {
                const password = $('#Password').val();
                const confirmPassword = $(this).val();
                isPasswordMatch = password === confirmPassword;
                $('#confirmPasswordError').text(isPasswordMatch ? '' : '密碼與確認密碼不一致');
                validateForm();
            });
        });
    </script>
</body>
</html>